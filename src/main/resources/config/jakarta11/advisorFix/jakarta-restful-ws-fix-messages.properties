# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2025 Payara Foundation and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://github.com/payara/Payara/blob/master/LICENSE.txt
# See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at glassfish/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# The Payara Foundation designates this particular file as subject to the "Classpath"
# exception as provided by the Payara Foundation in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# Jakarta RESTful Web Services 4.0 - Cookie constructor fix recommendations
jakarta-restful-ws-method-cookie-constructor-1=Replace the deprecated Cookie constructor with Cookie.Builder. \
\n Example: Instead of 'new Cookie(name, value)', use 'new Cookie.Builder(name).value(value).build()'. \
\n For constructors with additional parameters like path and domain, use the corresponding builder methods: \
\n 'new Cookie.Builder(name).value(value).path(path).domain(domain).build()'.

jakarta-restful-ws-method-cookie-constructor-2=Replace 'new Cookie(name, value)' with the Cookie.Builder pattern. \
\n Example: 'new Cookie.Builder(name).value(value).build()'.

jakarta-restful-ws-method-cookie-constructor-3=Replace 'new Cookie(name, value, path, domain)' with the Cookie.Builder pattern. \
\n Example: 'new Cookie.Builder(name).value(value).path(path).domain(domain).build()'.

jakarta-restful-ws-method-cookie-constructor-4=Replace 'new Cookie(name, value, path, domain, version)' with the Cookie.Builder pattern. \
\n Example: 'new Cookie.Builder(name).value(value).path(path).domain(domain).version(version).build()'.

# Jakarta RESTful Web Services 4.0 - NewCookie constructor fix recommendations
jakarta-restful-ws-method-newcookie-constructor-1=Replace 'new NewCookie(name, value)' with the NewCookie.Builder pattern. \
\n Example: 'new NewCookie.Builder(name).value(value).build()'.

jakarta-restful-ws-method-newcookie-constructor-2=Replace the deprecated NewCookie constructor with NewCookie.Builder. \
\n Example: 'new NewCookie.Builder(name).value(value).path(path).domain(domain).version(version).comment(comment).maxAge(maxAge).secure(secure).build()'.

jakarta-restful-ws-method-newcookie-constructor-3=Replace the deprecated NewCookie constructor with NewCookie.Builder. \
\n Example: 'new NewCookie.Builder(name).value(value).path(path).domain(domain).comment(comment).maxAge(maxAge).secure(secure).build()'.

jakarta-restful-ws-method-newcookie-constructor-4=Replace the deprecated NewCookie constructor with NewCookie.Builder. \
\n Example: 'new NewCookie.Builder(name).value(value).path(path).domain(domain).version(version).comment(comment).maxAge(maxAge).expiry(expiry).secure(secure).httpOnly(httpOnly).build()'.

jakarta-restful-ws-method-newcookie-constructor-5=Replace the deprecated NewCookie constructor with NewCookie.Builder. \
\n Example: 'new NewCookie.Builder(name).value(value).path(path).domain(domain).comment(comment).maxAge(maxAge).secure(secure).httpOnly(httpOnly).build()'.

jakarta-restful-ws-method-newcookie-constructor-6=Replace 'new NewCookie(cookie)' with NewCookie.Builder. \
\n Example: 'new NewCookie.Builder(cookie.getName()).value(cookie.getValue()).path(cookie.getPath()).domain(cookie.getDomain()).version(cookie.getVersion()).build()'.

jakarta-restful-ws-method-newcookie-constructor-7=Replace the deprecated NewCookie(Cookie, ...) constructor with NewCookie.Builder. \
\n Example: Start with the existing cookie properties and add the additional parameters using builder methods: \
\n 'new NewCookie.Builder(cookie.getName()).value(cookie.getValue()).comment(comment).maxAge(maxAge).secure(secure).build()'.

jakarta-restful-ws-method-newcookie-constructor-8=Replace the deprecated NewCookie(Cookie, ...) constructor with NewCookie.Builder. \
\n Example: Start with the existing cookie properties and add the additional parameters using builder methods: \
\n 'new NewCookie.Builder(cookie.getName()).value(cookie.getValue()).comment(comment).maxAge(maxAge).expiry(expiry).secure(secure).httpOnly(httpOnly).build()'.

# Jakarta RESTful Web Services 4.0 - Removed classes fix recommendations
jakarta-restful-ws-class-jaxblink-removed=Your application won't work with Jakarta RESTful Web Services 4.0. \
\n The Link.JaxbLink inner class has been removed. You must remove any usage of this class from your code. \
\n If you need JAXB support for Link objects, implement your own JAXB adapter or use alternative serialization methods.

jakarta-restful-ws-class-jaxbadapter-removed=Your application won't work with Jakarta RESTful Web Services 4.0. \
\n The Link.JaxbAdapter inner class has been removed. You must remove any usage of this class from your code. \
\n If you need JAXB support for Link objects, implement your own JAXB adapter or use alternative serialization methods.
